name: Generate wheels
on: [push]
jobs:
  releasecheck:
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python libraries
        run: python -m pip install tomli requests
      - name: Check release
        run: python releasecheck.py commitcheck
  build-wheels:
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    needs: [releasecheck]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python libraries
        run: pip install poetry build
      - name: Initialise venvs
        run: |
          python -m poetry install
          python -m poetry update
          python -m poetry check
      - name: Run setup.py
        run: poetry run python setup.py build
      - name: PEP build
        run: poetry run python -m build
      - name: Gather files
        uses: actions/upload-artifact@v3
        with:
          name: arc2control-dist
          path: dist/*
  publish:
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    needs: [build-wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python tools
        run: python -m pip install twine
      - uses: actions/download-artifact@v3
        id: download
        with:
          path: artifacts
      - name: List artifacts dir contents
        run: |
          ls -l artifacts && 
          ls -l artifacts/arc2control-dist
      - name: Twine check
        run: |
          python -m twine check \
            artifacts/arc2control-dist/*tar.gz \
            artifacts/arc2control-dist/*whl
      - name: Publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_API_TOKEN }}
        run:
          python -m twine upload \
            artifacts/arc2control-dist/*tar.gz \
            artifacts/arc2control-dist/*whl

